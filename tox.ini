[tox]
skipsdist=True
envlist=py36-{macos,linux}
tox_pip_extensions_ext_pip_custom_platform = true
tox_pip_extensions_ext_venv_update = true
docker_compose_version = 1.18.0

[testenv]
platform= macos: darwin
          linux: linux
# The Makefile and .travis.yml override the indexserver to the public one when
# running outside of Yelp.
indexserver =
    default = macos: https://pypi.python.org/simple
              linux: https://pypi.yelpcorp.com/simple
basepython = python3.6
setenv =
    TZ = UTC
deps =
    --requirement={toxinidir}/requirements.txt
    --requirement={toxinidir}/requirements-dev.txt
    --editable={toxinidir}
pre=check-requirements
commands =
    check-requirements
    macos: py.test --ignore tests/test_iptables.py --ignore tests/test_firewall_update.py --ignore tests/test_docker_wrapper.py --ignore tests/test_firewall.py --ignore tests/test_firewall_logging.py {posargs:tests}
    linux: py.test {posargs:tests}

[testenv:docs]
commands =
    /bin/rm -rf docs/source/generated/
    # The last arg to apidoc is a list of excluded paths
    sphinx-apidoc -f -e -o docs/source/generated/ paasta_tools
    sphinx-build -b html -d docs/build/doctrees docs/source docs/build/html

[testenv:paasta_itests]
changedir=paasta_itests/
passenv = DOCKER_TLS_VERIFY DOCKER_HOST DOCKER_CERT_PATH
deps =
    docker-compose=={[tox]docker_compose_version}
commands =
    docker-compose down
    docker-compose --verbose build
    # Fire up the marathon cluster in background
    docker-compose up -d mesosmaster mesosslave marathon marathon1 marathon2 hacheck httpdrain mesosslave2 mesosslave3 mesosslave4 mesosslave5
    docker-compose scale mesosslave=3
    # Run the paastatools container in foreground to catch the output
    # the `docker-compose run` vs `docker-compose up` is important here, as docker-compose run will
    # exit with the right code.
    #
    # dnephin says we need the --rm otherwise these containers won't be cleaned
    # up. I guess we only need this for run'd containers, not up'd containers?
    # IDK, the docs don't really specify.
    docker-compose run --rm paastatools /venv/bin/tox -i {env:PIP_INDEX_URL:https://pypi.python.org/simple} -e paasta_itests_inside_container -- --no-capture {posargs}
    docker-compose stop
    docker-compose rm --force

[testenv:example_cluster]
changedir=example_cluster/
passenv = DOCKER_TLS_VERIFY DOCKER_HOST DOCKER_CERT_PATH
deps =
    docker-compose=={[tox]docker_compose_version}
commands =
    docker-compose down
    docker-compose --verbose build
    # Fire up the marathon cluster in background
    # Run the paastatools container in foreground to catch the output
    # the `docker-compose run` vs `docker-compose up` is important here, as docker-compose run will
    # exit with the right code.
    #
    # dnephin says we need the --rm otherwise these containers won't be cleaned
    # up. I guess we only need this for run'd containers, not up'd containers?
    # IDK, the docs don't really specify.
    docker-compose run --rm playground ./example_cluster/example-cluster-test.sh
    docker-compose stop
    docker-compose rm --force

[testenv:example_cluster_k8s]
changedir=example_cluster/
passenv = DOCKER_TLS_VERIFY DOCKER_HOST DOCKER_CERT_PATH HOME
setenv = DIND_INSECURE_REGISTRIES = ["0.0.0.0/0"]
deps =
    docker-compose=={[tox]docker_compose_version}
commands =
    docker-compose -f docker-compose.k8s.yaml down
    ./dind-cluster-v1.13.sh clean
    ./dind-cluster-v1.13.sh up
    docker-compose -f docker-compose.k8s.yaml --verbose build
    # Fire up the marathon cluster in background
    # Run the paastatools container in foreground to catch the output
    # the `docker-compose run` vs `docker-compose up` is important here, as docker-compose run will
    # exit with the right code.
    #
    # dnephin says we need the --rm otherwise these containers won't be cleaned
    # up. I guess we only need this for run'd containers, not up'd containers?
    # IDK, the docs don't really specify.
    docker-compose -f docker-compose.k8s.yaml run --rm playground ./example_cluster/example-cluster-test-k8s.sh
    docker-compose -f docker-compose.k8s.yaml stop
    docker-compose -f docker-compose.k8s.yaml rm --force
    ./dind-cluster-v1.13.sh down

[testenv:paasta_itests_inside_container]
basepython = python3.6
envdir=/tmp/
setenv =
    DOCKER_COMPOSE_PROJECT_NAME = paastatools_inside_container
changedir=paasta_itests/
passenv =
    API_PORT
    HTTPDRAIN_PORT
    HACHECK_PORT
    MARATHON1_PORT
    MARATHON2_PORT
    MARATHON_PORT
    MESOSMASTER_PORT
    ZOOKEEPER_PORT
deps =
    {[testenv]deps}
    --requirement={toxinidir}/extra-linux-requirements.txt
    behave==1.2.5
whitelist_externals =
    /bin/mkdir
commands =
    mkdir -p /nail/etc
    # TODO: upgrade behave if they ever take this reasonable PR
    pip install git+git://github.com/asottile/behave@issue_533
    behave {posargs}

[testenv:general_itests]
basepython = python3.6
setenv =
    PAASTA_SYSTEM_CONFIG_DIR = {toxinidir}/general_itests/fake_etc_paasta
changedir=general_itests/
passenv = DOCKER_TLS_VERIFY DOCKER_HOST DOCKER_CERT_PATH
deps =
    {[testenv]deps}
    behave==1.2.5
commands =
    # TODO: upgrade behave if they ever take this reasonable PR
    pip install git+git://github.com/asottile/behave@issue_533
    pre-commit install -f --install-hooks
    pre-commit run --all-files
    pylint -E paasta_tools/mesos/ --ignore master.py,task.py
    behave {posargs}

[testenv:mypy]
basepython = python3.6
deps =
    {[testenv]deps}
    mypy==0.720
setenv =
    MYPYPATH = {toxinidir}
ignore_errors = True
whitelist_externals =
    /bin/sh
mypy_paths =
    paasta_tools
    tests/deployd/test_common.py
    tests/deployd/test_watchers.py
    tests/frameworks
    tests/test_kubernetes_tools.py
    tests/test_long_running_service_tools.py
    tests/test_marathon_tools.py
    tests/test_setup_kubernetes_job.py
    tests/test_setup_marathon_job.py
    tests/test_secret_tools.py
    tests/secret_providers/test_secret_providers.py
    tests/secret_providers/test_vault.py
    tests/test_utils.py
commands =
    mypy {posargs:{[testenv:mypy]mypy_paths}}

[testenv:install-hooks]
basepython = python3.6
deps = pre-commit
commands = pre-commit install -f --install-hooks

[flake8]
max-line-length = 120
extend-ignore = E501,E203,W503

[pep8]
ignore = E265,E501
