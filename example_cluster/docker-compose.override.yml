version: '2'
volumes:
  ssh-data: {}
services:
  zookeeper:
    # we need to create /mesos-testcluster/autoscaling for deployd to start up correctly...
    command: "bash -c '/usr/share/zookeeper/bin/zkServer.sh start-foreground & sleep 5 && /usr/share/zookeeper/bin/zkCli.sh create /mesos-testcluster/autoscaling \"\" & while true; do sleep 100; done'"
  mesosbase:
    build: ../yelp_package/dockerfiles/itest/mesos/
  mesosmaster:
    build:
      context: ../
      dockerfile: ./yelp_package/dockerfiles/mesos-paasta/Dockerfile
    ports:
      - '5050:5050'
      - 22
    depends_on:
      - mesosbase
      - zookeeper
    volumes:
      - ../:/work:rw
      - ./paasta:/etc/paasta:rw
      - ./docker_registry.json:/etc/paasta/docker_registry.json:rw
      - ./boto:/etc/boto:rw
      - ./example-services:/nail/etc/services:rw
      - /var/run/docker.sock:/var/run/docker.sock
      - ssh-data:/root/.ssh
    command: '/start.sh'
  mesosslave:
    ports:
      - 5051
      - 22
    build:
      context: ../
      dockerfile: ./yelp_package/dockerfiles/mesos-paasta/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ssh-data:/root/.ssh
    depends_on:
      - mesosbase
      - zookeeper
    command: '/start-slave.sh'
  marathon:
    ports:
      - 8080
  marathon1:
    ports:
      - 8080
  marathon2:
    ports:
      - 8080
  itest_xenial:
    build: ../yelp_package/dockerfiles/xenial/
  playground:
    build:
      context: ../
      dockerfile: ./yelp_package/dockerfiles/playground/Dockerfile
    volumes:
      - ../:/work:rw
      - ./paasta:/etc/paasta:rw
      - ./docker_registry.json:/etc/paasta/docker_registry.json:rw
      - ./boto:/etc/boto:rw
      - ./example-services:/nail/etc/services:rw
      - /var/run/docker.sock:/var/run/docker.sock
      - ssh-data:/root/.ssh
    command: '/start.sh'
    depends_on:
      - mesosmaster
      - itest_xenial
      - registry
      - git
      - mesosslave
      - marathon
      - marathon1
      - marathon2
      - dynamodb
      - paasta_api
  registry:
    image: registry:2
    ports:
      - '5000:5000'
  git:
    build: ../yelp_package/dockerfiles/gitremote/
    command: /usr/sbin/sshd -D
    volumes:
      - ssh-data:/root/.ssh
    ports:
      - 22
  dynamodb:
    image: deangiberson/aws-dynamodb-local
    ports:
        - '8000:8000'
  paasta_api:
    command: bash -c 'pip install -e /work && while true; do pserve /work/paasta_tools/api/development.ini --reload; echo "RESTARTING API..."; sleep 5; done'
    ports:
      - '5054:5054'
    volumes:
      - ../:/work:rw
      - nail-etc:/nail/etc
      - ./paasta:/etc/paasta:rw
      - ./docker_registry.json:/etc/paasta/docker_registry.json:rw
      - ./example-services:/nail/etc/services:rw
